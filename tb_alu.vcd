$date
	Tue Sep  2 22:40:15 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_alu $end
$var wire 1 ! zero $end
$var wire 32 " result [31:0] $end
$var reg 32 # a [31:0] $end
$var reg 4 $ alu_sel [3:0] $end
$var reg 32 % b [31:0] $end
$scope module uut $end
$var wire 32 & a [31:0] $end
$var wire 4 ' alu_sel [3:0] $end
$var wire 32 ( b [31:0] $end
$var wire 1 ! zero $end
$var parameter 4 ) ALU_ADD $end
$var parameter 4 * ALU_AND $end
$var parameter 4 + ALU_OR $end
$var parameter 4 , ALU_SLL $end
$var parameter 4 - ALU_SLT $end
$var parameter 4 . ALU_SLTU $end
$var parameter 4 / ALU_SRA $end
$var parameter 4 0 ALU_SRL $end
$var parameter 4 1 ALU_SUB $end
$var parameter 4 2 ALU_XOR $end
$var reg 32 3 result [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100 2
b1 1
b1000 0
b1001 /
b110 .
b101 -
b111 ,
b11 +
b10 *
b0 )
$end
#0
$dumpvars
b11110 3
b10100 (
b0 '
b1010 &
b10100 %
b0 $
b1010 #
b11110 "
0!
$end
#10000
b1010 "
b1010 3
b1 $
b1 '
b1010 %
b1010 (
b10100 #
b10100 &
#20000
b11110000 "
b11110000 3
b10 $
b10 '
b111111110000 %
b111111110000 (
b1111000011110000 #
b1111000011110000 &
#30000
b1111111111110000 "
b1111111111110000 3
b11 $
b11 '
#40000
b1111111100000000 "
b1111111100000000 3
b100 $
b100 '
#50000
b1 "
b1 3
b101 $
b101 '
b11 %
b11 (
b11111111111111111111111111111011 #
b11111111111111111111111111111011 &
#60000
1!
b0 "
b0 3
b110 $
b110 '
#70000
0!
b10000 "
b10000 3
b111 $
b111 '
b100 %
b100 (
b1 #
b1 &
#80000
b1111 "
b1111 3
b1000 $
b1000 '
b11110000 #
b11110000 &
#90000
b11111111111111111111111111111100 "
b11111111111111111111111111111100 3
b1001 $
b1001 '
b10 %
b10 (
b11111111111111111111111111110000 #
b11111111111111111111111111110000 &
#100000
1!
b0 "
b0 3
b1 $
b1 '
b101 %
b101 (
b101 #
b101 &
#110000
